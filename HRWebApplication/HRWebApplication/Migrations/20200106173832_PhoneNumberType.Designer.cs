// <auto-generated />
using System;
using HRWebApplication.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HRWebApplication.Migrations
{
    [DbContext(typeof(HRProjectDatabaseContext))]
    [Migration("20200106173832_PhoneNumberType")]
    partial class PhoneNumberType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HRWebApplication.Models.ApplicationAttachment", b =>
                {
                    b.Property<int>("ApplicationAttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ApplicationAttachmentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationId")
                        .HasColumnName("ApplicationID");

                    b.Property<int>("AttachmentId")
                        .HasColumnName("AttachmentID");

                    b.HasKey("ApplicationAttachmentId");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("ApplicationId", "AttachmentId")
                        .HasName("idx_application_attachment");

                    b.ToTable("ApplicationAttachment");
                });

            modelBuilder.Entity("HRWebApplication.Models.Applications", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ApplicationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationStatusId")
                        .HasColumnName("ApplicationStatusID");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Cvid")
                        .HasColumnName("CVID");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("JobOfferId")
                        .HasColumnName("JobOfferID");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.HasKey("ApplicationId");

                    b.HasIndex("ApplicationStatusId")
                        .HasName("idx_status");

                    b.HasIndex("Cvid");

                    b.HasIndex("JobOfferId")
                        .HasName("idx_joboffer");

                    b.HasIndex("UserId");

                    b.HasIndex("JobOfferId", "FirstName", "LastName")
                        .HasName("idx_joboffer_names");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("HRWebApplication.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("ApplicationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ApplicationStatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("ApplicationStatusId");

                    b.ToTable("ApplicationStatus");
                });

            modelBuilder.Entity("HRWebApplication.Models.Attachments", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AttachmentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("AttachmentId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("HRWebApplication.Models.Companies", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CompanyId");

                    b.HasIndex("CompanyName")
                        .HasName("idx_name");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("HRWebApplication.Models.CV", b =>
                {
                    b.Property<int>("CVID")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CVID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("CVID");

                    b.ToTable("CV");
                });

            modelBuilder.Entity("HRWebApplication.Models.JobOffers", b =>
                {
                    b.Property<int>("JobOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JobOfferID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnName("CompanyID");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("JobOfferStatusId")
                        .HasColumnName("JobOfferStatusID");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("SalaryFrom");

                    b.Property<int?>("SalaryTo");

                    b.Property<int>("UserId");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("datetime");

                    b.HasKey("JobOfferId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CreationDate")
                        .HasName("idx_date");

                    b.HasIndex("JobOfferStatusId")
                        .HasName("idx_status");

                    b.HasIndex("JobTitle")
                        .HasName("idx_title");

                    b.HasIndex("Location")
                        .HasName("idx_location");

                    b.HasIndex("UserId");

                    b.HasIndex("ValidUntil")
                        .HasName("idx_expirationdate");

                    b.ToTable("JobOffers");
                });

            modelBuilder.Entity("HRWebApplication.Models.JobOfferStatus", b =>
                {
                    b.Property<int>("JobOfferStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JobOfferStatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("JobOfferStatusId");

                    b.ToTable("JobOfferStatus");
                });

            modelBuilder.Entity("HRWebApplication.Models.UserRoles", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRoleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("UserRoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("HRWebApplication.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("UserRoleId")
                        .HasColumnName("UserRoleID");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .HasName("idx_email");

                    b.HasIndex("FirstName")
                        .HasName("idx_fname");

                    b.HasIndex("LastName")
                        .HasName("idx_lname");

                    b.HasIndex("UserRoleId");

                    b.HasIndex("FirstName", "LastName")
                        .HasName("idx_names");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HRWebApplication.Models.ApplicationAttachment", b =>
                {
                    b.HasOne("HRWebApplication.Models.Applications", "Application")
                        .WithMany("ApplicationAttachment")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK_ApplicationAttachment_Applications");

                    b.HasOne("HRWebApplication.Models.Attachments", "Attachment")
                        .WithMany("ApplicationAttachment")
                        .HasForeignKey("AttachmentId")
                        .HasConstraintName("FK_ApplicationAttachment_Attachments");
                });

            modelBuilder.Entity("HRWebApplication.Models.Applications", b =>
                {
                    b.HasOne("HRWebApplication.Models.ApplicationStatus", "ApplicationStatus")
                        .WithMany("Applications")
                        .HasForeignKey("ApplicationStatusId")
                        .HasConstraintName("FK_Applications_ApplicationStatus");

                    b.HasOne("HRWebApplication.Models.CV", "Cv")
                        .WithMany("Applications")
                        .HasForeignKey("Cvid")
                        .HasConstraintName("FK_Applications_CV");

                    b.HasOne("HRWebApplication.Models.JobOffers", "JobOffer")
                        .WithMany("Applications")
                        .HasForeignKey("JobOfferId")
                        .HasConstraintName("FK_Applications_JobOffer");

                    b.HasOne("HRWebApplication.Models.Users", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Applications_Users");
                });

            modelBuilder.Entity("HRWebApplication.Models.JobOffers", b =>
                {
                    b.HasOne("HRWebApplication.Models.Companies", "Company")
                        .WithMany("JobOffers")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_JobOffers_Companies");

                    b.HasOne("HRWebApplication.Models.JobOfferStatus", "JobOfferStatus")
                        .WithMany("JobOffers")
                        .HasForeignKey("JobOfferStatusId")
                        .HasConstraintName("FK_JobOffers_JobOfferStatus");

                    b.HasOne("HRWebApplication.Models.Users", "User")
                        .WithMany("JobOffers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HRWebApplication.Models.Users", b =>
                {
                    b.HasOne("HRWebApplication.Models.UserRoles", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .HasConstraintName("FK_Users_UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
